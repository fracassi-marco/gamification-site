{"version":3,"sources":["Menu.js","ListPage.js","RankingPage.js","serviceWorker.js","index.js"],"names":["Menu","_this","this","react_default","a","createElement","className","code","name","url","map","page","index","key","props","selected","Link","to","Component","ListPage","src_Menu","activities","sort","b","date","activity","author","type","title","links","link","link_index","href","reduce","prev","curr","pointsOf","authorActivities","points","currentActivity","byPoints","RankingPage","xs","group","Object","entries","rv","x","push","entry","React","Boolean","window","location","hostname","match","App","state","_this2","axios","get","concat","process","then","res","data","setState","console","log","_this3","BrowserRouter","basename","Route","exact","path","render","src_ListPage_0","doSomeEvent","bind","src_RankingPage","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6QA0BeA,mLApBF,IAAAC,EAAAC,KAML,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAPT,CACV,CAACC,KAAM,OAAQC,KAAM,SAAUC,IAAK,KACpC,CAACF,KAAM,UAAWC,KAAM,aAAcC,IAAK,aAM5BC,IAAI,SAACC,EAAMC,GAAP,OACXT,EAAAC,EAAAC,cAAA,OAAKQ,IAAK,OAASD,EAAON,UAAW,oCAAsCK,EAAKJ,OAASN,EAAKa,MAAMC,SAAW,qBAAuB,KAClIZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAIN,EAAKF,KAAME,EAAKH,kBAd9BU,aC6CLC,mLA1CX,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCAEbH,EAAAC,EAAAC,cAACe,EAAD,CAAML,SAAS,SAEfZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,YAINH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACVJ,KAAKY,MAAMO,WAAWC,KAAK,SAAClB,EAAGmB,GAAJ,OAAUnB,EAAEoB,KAAOD,EAAEC,OAAMd,IAAI,SAACe,EAAUb,GAAX,OACzDT,EAAAC,EAAAC,cAAA,OAAKQ,IAAK,WAAaD,EAAON,UAAU,qCACtCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBmB,EAASD,MACxCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYmB,EAASC,QACpCvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYmB,EAASE,MACpCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYmB,EAASG,OACpCzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdmB,EAASI,MAAMnB,IAAI,SAACoB,EAAMC,GAAP,OAClB5B,EAAAC,EAAAC,cAAA,KAAGQ,IAAK,OAASD,EAAQmB,EAAYC,KAAK,cAAcF,EAAKH,QAC7DM,OAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,KAAMC,oBA9BnCjB,aCMvB,SAASkB,EAASC,GAChB,OAAOA,EAAiBJ,OAAO,SAACK,EAAQC,GAEtC,MADyB,iBAAzBA,EAAgBZ,KAA0BW,GAAQ,EAAIA,IAC/CA,GACN,GAGL,SAASE,EAASpC,EAAGmB,GACnB,OAAOa,EAAShC,EAAE,IAAMgC,EAASb,EAAE,IAAM,GAAK,MAwC/BkB,mLAnCb,IApBcC,EAAI7B,EAoBd8B,GApBUD,EAoBMxC,KAAKY,MAAMO,WApBbR,EAoByB,SAnBtC+B,OAAOC,QAAQH,EAAGT,OAAO,SAAUa,EAAIC,GAE5C,OADCD,EAAGC,EAAElC,IAAQiC,EAAGC,EAAElC,KAAS,IAAImC,KAAKD,GAC9BD,GACN,MAiBExB,KAAKkB,GAER,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAACe,EAAD,CAAML,SAAS,YACfZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,aAINH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACZqC,EAAMjC,IAAI,SAACuC,EAAOrC,GAAR,OACTT,EAAAC,EAAAC,cAAA,OAAKQ,IAAK,QAAUD,EAAON,UAAU,qCACnCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBM,EAAQ,GACvCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY2C,EAAM,KAEnC9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY8B,EAASa,EAAM,mBA1BpCC,IAAMhC,WCTZiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,gGCTAC,6MACJC,MAAQ,CACNpC,WAAY,uFAGM,IAAAqC,EAAAxD,KAClByD,IAAMC,IAAN,GAAAC,OAAaC,qBAAb,eACGC,KAAK,SAAAC,GACJ,IAAMvC,EAAWuC,EAAIC,KAAK5C,WAC1BqC,EAAKQ,SAAS,CAAE7C,WAAYI,4CAKhC0C,QAAQC,IAAI,4CAGL,IAAAC,EAAAnE,KACP,OACEC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAeC,SAAU,sBACrBpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAMxE,EAAAC,EAAAC,cAACuE,EAAD,CAAUC,YAAaR,EAAKQ,YAAYC,KAAKT,GAAOhD,WAAYgD,EAAKZ,MAAMpC,gBAC/GlB,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOE,KAAK,WAAWC,OAAQ,kBAAMxE,EAAAC,EAAAC,cAAC0E,EAAD,CAAa1D,WAAYgD,EAAKZ,MAAMpC,yBAtBrE6B,IAAMhC,WA6BxB8D,IAASL,OAAOxE,EAAAC,EAAAC,cAAC4E,EAAD,MAASC,SAASC,eAAe,SD2F3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.4c076eed.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nclass  Menu extends Component {\n    \n\n    render() {\n        const pages = [\n            {code: \"list\", name: \"Elenco\", url: \"/\"},\n            {code: \"ranking\", name: \"Classifica\", url: \"/ranking\"}\n          ];\n\n        return (        \n            <div className=\"filter-by flex grow wrap\">            \n                <div className=\"time-filter flex grow\">\n                    {pages.map((page, index) =>                                                             \n                    <div key={'page' + index} className={\"row-button pointer align-center \" + (page.code === this.props.selected ? 'row-button--active' : '')}>\n                        <Link to={page.url}>{page.name}</Link>\n                    </div>    \n                    )}  \n                </div>            \n            </div>\n        )\n    }\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport './ListPage.css';\nimport Menu from './Menu';\n\nclass ListPage extends Component {\n  render() {\n    return (\n      <div className=\"leaderboard flex column wrap\">\n      <div className=\"leaderboard-table flex column\">\n        <div className=\"leaderboard-header flex column grow\">\n\n          <Menu selected=\"list\"></Menu>\n\n          <div className=\"leaderboard-row flex align-center row--header\">\n            <div className=\"row-position\">Data</div>\n            <div className=\"row-collapse flex align-center\">\n              <div className=\"row-user--header\">Autore</div>\n              <div className=\"row-rank--header\">Tipo</div>\n              <div className=\"row-team--header\">Titolo</div>\n              <div className=\"row-team--header\">Links</div>\n            </div>            \n          </div>\n        </div>\n        <div className=\"leaderboard-body flex column grow\">\n            {this.props.activities.sort((a, b) => a.date < b.date).map((activity, index) =>       \n              <div key={'activity' + index} className=\"leaderboard-row flex align-center\">\n                <div className=\"row-position\">{activity.date}</div>\n                <div className=\"row-collapse flex align-center\">\n                    <div className=\"row-user\">{activity.author}</div>\n                    <div className=\"row-rank\">{activity.type}</div>\n                    <div className=\"row-team\">{activity.title}</div>\n                    <div className=\"row-team\">\n                    {activity.links.map((link, link_index) =>\n                      <a key={'link' + index + link_index} href=\"{link.url}\">{link.type}</a>\n                    ).reduce((prev, curr) => [prev, ', ', curr])}\n                    </div>\n                </div>          \n              </div>\n            )}\n          </div>\n        {/*<button onClick={this.props.doSomeEvent}>doSomeEvent</button>*/}\n      </div>\n\n    </div>\n    );\n  }\n}\n\nexport default ListPage;\n","import React from 'react'\nimport Menu from './Menu'\n\nfunction groupBy (xs, key) {\n  return Object.entries(xs.reduce(function (rv, x) {\n    (rv[x[key]] = rv[x[key]] || []).push(x)\n    return rv\n  }, {}))\n}\n\nfunction pointsOf(authorActivities) {\n  return authorActivities.reduce((points, currentActivity) => {\n    currentActivity.type === 'presentation' ? points+=3 : points++\n    return points\n  }, 0)\n}\n\nfunction byPoints(a, b) {\n  return pointsOf(a[1]) < pointsOf(b[1]) ? 1 : -1\n}\n\nclass RankingPage extends React.Component {\n  render() {\n    var group = groupBy(this.props.activities, \"author\")\n      .sort(byPoints)\n\n    return (\n        <div className=\"leaderboard flex column wrap\">\n          <div className=\"leaderboard-table flex column\">\n            <div className=\"leaderboard-header flex column grow\">\n              <Menu selected=\"ranking\"></Menu>\n              <div className=\"leaderboard-row flex align-center row--header\">\n                <div className=\"row-position\">#</div>\n                <div className=\"row-collapse flex align-center\">\n                  <div className=\"row-user--header\">Punteggio</div>\n                  <div className=\"row-rank--header\">Autore</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"leaderboard-body flex column grow\">\n              {group.map((entry, index) =>\n                <div key={'group' + index} className=\"leaderboard-row flex align-center\">\n                  <div className=\"row-position\">{index + 1}</div>\n                  <div className=\"row-collapse flex align-center\">\n                    <div className=\"row-caller flex\">\n                      <div className=\"row-user\">{entry[0]}</div>\n                    </div>\n                    <div className=\"row-team\">{pointsOf(entry[1])}</div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  export default RankingPage","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ListPage from './ListPage';\nimport RankingPage from './RankingPage';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter } from 'react-router-dom'\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {\n    activities: []\n  }\n\n  componentDidMount() {\n    axios.get(`${process.env.PUBLIC_URL}/data.json`)\n      .then(res => {\n        const activity = res.data.activities\n        this.setState({ activities: activity });\n      });\n  }\n\n  doSomeEvent() {\n    console.log(\"event!!\")\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename={'/gamification-site'}>\n          <div className='router a1'>\n              <Route exact path=\"/\" render={() => <ListPage doSomeEvent={this.doSomeEvent.bind(this)} activities={this.state.activities}/>}/>\n              <Route path=\"/ranking\" render={() => <RankingPage activities={this.state.activities}/>} />\n          </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}